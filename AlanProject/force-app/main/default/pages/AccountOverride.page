<apex:page StandardController="Account" extensions="ForecastController"  action="{!ForecastAlert}" >
    
    <apex:form >
    <c:TLS_NiceWarningJquery />
    <chatter:feedWithFollowers entityId="{!account.id}"/>
    <apex:actionFunction name="callAlert" action="{!showPopup}" rerender="tstpopup" status="myStatus"/>
       <apex:outputPanel id="tstpopup">
        <apex:outputPanel styleClass="popupBackground" layout="block" rendered="{!displayPopUp}"/>
            <apex:outputPanel styleClass="custPopup" layout="block" rendered="{!displayPopUp}">
                {!alertForecast} <br/><br/><br/>
                <apex:commandButton value="Ok" style="float:right" action="{!closePopup}" rerender="tstpopup"/>
            </apex:outputPanel>
        </apex:outputPanel>
     </apex:form>
 
    <style type="text/css">
        .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 250px;
            margin-left: -150px;
            top:200px;
        }
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }

    </style>
    <script>
        window.document.onload = new function(e){
            if(sforce.console.isInConsole()){
                sforce.console.setTabTitle('{!Account.Name}');
            }
            if({!alertForecast!=''} && {!Account.Forecast_Account__c == true} && {!alertUserDivision=='Geospatial'}){
                callAlert(true);
            }
        }
    </script>
    <apex:includeScript value="/support/console/29.0/integration.js"/>
    <apex:detail inlineEdit="true" /> 
</apex:page>