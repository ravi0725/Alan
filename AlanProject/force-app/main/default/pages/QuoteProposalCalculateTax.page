<apex:page controller="QuotePropCalcTax"  >
<apex:stylesheet value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/assets/skins/sam/skin.css')}" /> 
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/yahoo-dom-event/yahoo-dom-event.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/dragdrop/dragdrop-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/container/container-min.js')}" />
    <apex:includescript value="{!URLFOR($Resource.Apttus_Proposal__YUILibrary, '/yui/build/animation/animation-min.js')}" />
    
   <script type="text/javascript">
            
        // Create a namespace for our custom functions
        YAHOO.namespace("force.com");
        
        // wait panel
        
        /**
         * Builds the wait panel.
         */
        YAHOO.force.com.buildWaitPanel = function() {
            document.body.className = document.body.className + " yui-skin-sam";
            YAHOO.force.com.waitPanel = new YAHOO.widget.Panel(
                "waitPanel",  // The id of our dialog container
                { 
                        width           :   "300px", // You can play with this until it's right
                        visible         :   false,   // Should be invisible when rendered
                        draggable       :   false,   // Make the dialog draggable
                        close           :   false,   // Don't include a close title button
                        modal           :   true,    // Make it modal
                        fixedCenter     :   true,    // Keep centered if window is scrolled
                        zindex          :   40,      // Make sure it's on top of everything
                        constraintoviewport: true,
                        
                        // This line adds the appear/disapper fade effect
                        effect          :   {effect:YAHOO.widget.ContainerEffect.FADE,duration:0.25}
                                    
                }
            );
            
            // header
            YAHOO.force.com.waitPanel.setHeader("Validating... Please wait");
            // set image
            YAHOO.force.com.waitPanel.setBody('<center><img src="{!URLFOR($Resource.Apttus_Config2__Image_LoadingPage)}" /></center>');
            // Render the dialog to the document.body level of the DOM
            YAHOO.force.com.waitPanel.render(document.body);
            
        }
        
        // Function called when the DOM is ready to create the dialog,
        // render the dialog into the document body, add our dialog skin
        // css to the body tag, and wire up the buttons on our dialog   
        YAHOO.force.com.onDOMReady = function() {
            
            // build the wait panel
            YAHOO.force.com.buildWaitPanel();
            // show modal panel
            YAHOO.force.com.waitPanel.show();
            // invoke accept function
            callToActionMethod(); 
            
        }
        
        // build the tree as soon as the DOM is in a usable state
        YAHOO.util.Event.onDOMReady(YAHOO.force.com.onDOMReady);    
        
    </script> 
    <script>  
          function callDelayMethod(){         
              setTimeout(callToActionMethod,3000);    
                    
          } 
      </script>
      
    <apex:form id="form">
          
    <apex:outputPanel id="expQuotePopup" rendered="{!errorPopup}">
        <apex:outputPanel styleClass="popupBackground" layout="block" rendered="true"/> 
        <apex:outputPanel styleClass="expQuotePopup" layout="block" rendered="true">
            <apex:pageBlock >
                <apex:pageBlockButtons location="bottom">
                    <apex:outputPanel id="buttons_tax"> 
                        <div style="margin-left:16%;margin-right:auto;display:block;margin-top:auto;margin-bottom:auto">                        
                             <apex:commandButton value="Back" action="{!cancelquote}" />
                        </div>                    
                    </apex:outputPanel>
                </apex:pageBlockButtons>
                
                <apex:pageblockSection columns="1" collapsible="false">
                    <apex:outputPanel >
                          <div id="pbField" style="text-align:center">
                           <apex:outputText value="ERROR while Validating: {!errorMsg}" />
                          </div>    
                    </apex:outputPanel>
                    
                 </apex:pageblockSection>
             </apex:pageBlock>
        </apex:outputPanel>      
      </apex:outputPanel>
        
        <apex:actionFunction name="callToActionMethod" action="{!callActionMethod}" rendered="{!errorPopup == false}"/> 
    </apex:form>

<style type="text/css">
        .custPopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 180px;
            margin-left: -150px;
            top:200px;
        }
        .popupBackground{
            background-color:black;
            opacity: 0.20;
            filter: alpha(opacity = 20);
            position: absolute;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 9998;
        }
        
        .expQuotePopup{
            background-color: white;
            border-width: 2px;
            border-style: solid;
            z-index: 9999;
            left: 50%;
            padding:10px;
            position: absolute;
            /* These are the 3 css properties you will need to change so the popup 
            displays in the center of the screen. First set the width. Then set 
            margin-left to negative half of what the width is. You can add 
            the height property for a fixed size pop up if you want.*/
            width: 400px;
            margin-left: -150px;
            top:200px;
        }

    </style>
</apex:page>